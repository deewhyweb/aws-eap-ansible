---
- name: Create Ec2 instances
  hosts: localhost
  gather_facts: false
  vars:
    ami_id: "ami-0e3314c4e353d52d5"
    instance_type: "t2.medium"
    instance_count: 2
    vpc_subnet_id: "subnet-004da60d20b10c1b3"
    aws_region: "us-east-1"
    aws_security_group: "eap-group2"
    aws_key_pair_name: "dy-eap"

  tasks:
    - name: Launch ec2 instances
      ec2:
        region: "{{ aws_region }}"
        key_name: "{{ aws_key_pair_name }}"
        group: "{{ aws_security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami_id }}"
        wait: yes
        wait_timeout: 500
        count: "{{ instance_count }}"
        instance_tags:
          name: JBoss-EAP-servers
          os: rhel
        monitoring: no
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
      register: ec2
      delegate_to: localhost

    - name: Wait for SSH to come up
      local_action:
        module: wait_for
        host: "{{ item.public_ip }}"
        port: 22
        delay: 10
        timeout: 120
      loop: "{{ ec2.instances }}"
    - name: Add host to group 'jboss'
      ansible.builtin.add_host:
        hostname: '{{ item.dns_name }}'
        groups: jboss
      loop: "{{ ec2.instances }}"

- name: connect to JBoss instance, start EAP, and deploy application
  hosts: jboss
  gather_facts: true
  become: yes
  collections:
    - middleware_automation.wildfly
  vars:
    app_artifact_location: "./"
    app_artifact_name: "helloworld.war"
  tasks:
  - name: Start JBoss EAP
    ansible.builtin.command: systemctl start eap7-standalone
  - name: Copy artifact to JBoss server
    ansible.builtin.copy:
      src: "{{ app_artifact_location }}{{ app_artifact_name }}"
      dest: "/opt/{{ app_artifact_name }}"
  - name: "Deploy war file"
    include_role:
      name: wildfly_utils
      tasks_from: jboss_cli.yml
    vars:
      jboss_home: "/opt/rh/eap7/root/usr/share/wildfly"
      query: "'deploy --force /opt/{{ app_artifact_name }}'"
      jboss_cli_controller_port: "9990"
    